#!/bin/sh

# Store the root directory
ROOT_DIR=$(pwd)

# Format staged TypeScript files with Prettier (only staged .ts/.tsx files)
STAGED_TS_FILES_NUL=$(mktemp)
git diff --cached --name-only -z --diff-filter=ACMR -- '*.ts' '*.tsx' > "$STAGED_TS_FILES_NUL"

if [ -s "$STAGED_TS_FILES_NUL" ]; then
  echo "🪄 Running Prettier on staged TypeScript files..."
  xargs -0 pnpm prettier --write < "$STAGED_TS_FILES_NUL"
  PRETTIER_STATUS=$?
  if [ $PRETTIER_STATUS -ne 0 ]; then
    echo "❌ Prettier formatting failed. Please fix errors before committing."
    rm -f "$STAGED_TS_FILES_NUL"
    exit 1
  fi
  # Restage formatted files
  xargs -0 git add < "$STAGED_TS_FILES_NUL"
fi
rm -f "$STAGED_TS_FILES_NUL"

# Run lint in parallel for all packages
pnpm --parallel --filter "./packages/**" lint &
PID1=$!

# Run lint for platform/flowglad-next
cd "$ROOT_DIR/platform/flowglad-next" && pnpm lint &
PID2=$!

# Run lint for platform/hosted-billing  
cd "$ROOT_DIR/platform/hosted-billing" && pnpm lint &
PID3=$!

# Wait for each process and capture exit status
wait $PID1
STATUS1=$?

wait $PID2
STATUS2=$?

wait $PID3
STATUS3=$?

# Check if any lint task failed
if [ $STATUS1 -ne 0 ] || [ $STATUS2 -ne 0 ] || [ $STATUS3 -ne 0 ]; then
  echo "❌ Lint checks failed. Please fix errors before committing."
  exit 1
fi

echo "✅ All lint checks passed!"
