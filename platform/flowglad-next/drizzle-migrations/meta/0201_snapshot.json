{
  "id": "438ea32f-f2d9-46ad-a6e7-a26417acc8bc",
  "prevId": "af99c50c-7881-4f31-a5f3-b691162e3603",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.api_keys": {
      "name": "api_keys",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "unkey_id": {
          "name": "unkey_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "apiKeyType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "api_keys_organization_id_idx": {
          "name": "api_keys_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "api_keys_organization_id_organizations_id_fk": {
          "name": "api_keys_organization_id_organizations_id_fk",
          "tableFrom": "api_keys",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "api_keys_id_unique": {
          "name": "api_keys_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable all actions for own organizations": {
          "name": "Enable all actions for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.billing_period_items": {
      "name": "billing_period_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "billing_period_id": {
          "name": "billing_period_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "unit_price": {
          "name": "unit_price",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "discount_redemption_id": {
          "name": "discount_redemption_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "billing_period_items_billing_period_id_idx": {
          "name": "billing_period_items_billing_period_id_idx",
          "columns": [
            {
              "expression": "billing_period_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "billing_period_items_discount_redemption_id_idx": {
          "name": "billing_period_items_discount_redemption_id_idx",
          "columns": [
            {
              "expression": "discount_redemption_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "billing_period_items_billing_period_id_billing_periods_id_fk": {
          "name": "billing_period_items_billing_period_id_billing_periods_id_fk",
          "tableFrom": "billing_period_items",
          "tableTo": "billing_periods",
          "columnsFrom": [
            "billing_period_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "billing_period_items_discount_redemption_id_discount_redemptions_id_fk": {
          "name": "billing_period_items_discount_redemption_id_discount_redemptions_id_fk",
          "tableFrom": "billing_period_items",
          "tableTo": "discount_redemptions",
          "columnsFrom": [
            "discount_redemption_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "billing_period_items_id_unique": {
          "name": "billing_period_items_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"billingPeriodId\" in (select \"id\" from \"BillingPeriods\" where \"subscriptionId\" in (select \"id\" from \"Subscriptions\" where \"organization_id\" in (select \"organization_id\" from \"memberships\")))"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.billing_periods": {
      "name": "billing_periods",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "BillingPeriodStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "trial_period": {
          "name": "trial_period",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "billing_periods_subscription_id_idx": {
          "name": "billing_periods_subscription_id_idx",
          "columns": [
            {
              "expression": "subscription_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "billing_periods_status_idx": {
          "name": "billing_periods_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "billing_periods_subscription_id_subscriptions_id_fk": {
          "name": "billing_periods_subscription_id_subscriptions_id_fk",
          "tableFrom": "billing_periods",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "billing_periods_id_unique": {
          "name": "billing_periods_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"subscriptionId\" in (select \"id\" from \"Subscriptions\" where \"organization_id\" in (select \"organization_id\" from \"memberships\"))"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.billing_runs": {
      "name": "billing_runs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "billing_period_id": {
          "name": "billing_period_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "scheduled_for": {
          "name": "scheduled_for",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "BillingRunStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_payment_intent_id": {
          "name": "stripe_payment_intent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "attempt_number": {
          "name": "attempt_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "error_details": {
          "name": "error_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "payment_method_id": {
          "name": "payment_method_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_stripe_payment_intent_event_timestamp": {
          "name": "last_stripe_payment_intent_event_timestamp",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "billing_runs_billing_period_id_idx": {
          "name": "billing_runs_billing_period_id_idx",
          "columns": [
            {
              "expression": "billing_period_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "billing_runs_status_idx": {
          "name": "billing_runs_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "billing_runs_billing_period_id_billing_periods_id_fk": {
          "name": "billing_runs_billing_period_id_billing_periods_id_fk",
          "tableFrom": "billing_runs",
          "tableTo": "billing_periods",
          "columnsFrom": [
            "billing_period_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "billing_runs_subscription_id_subscriptions_id_fk": {
          "name": "billing_runs_subscription_id_subscriptions_id_fk",
          "tableFrom": "billing_runs",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "billing_runs_payment_method_id_payment_methods_id_fk": {
          "name": "billing_runs_payment_method_id_payment_methods_id_fk",
          "tableFrom": "billing_runs",
          "tableTo": "payment_methods",
          "columnsFrom": [
            "payment_method_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "billing_runs_id_unique": {
          "name": "billing_runs_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"billingPeriodId\" in (select \"id\" from \"BillingPeriods\" where \"subscriptionId\" in (select \"id\" from \"Subscriptions\" where \"organization_id\" in (select \"organization_id\" from \"memberships\")))"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.catalogs": {
      "name": "catalogs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "catalogs_organization_id_idx": {
          "name": "catalogs_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "catalogs_name_idx": {
          "name": "catalogs_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "catalogs_organization_id_organizations_id_fk": {
          "name": "catalogs_organization_id_organizations_id_fk",
          "tableFrom": "catalogs",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "catalogs_id_unique": {
          "name": "catalogs_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.checkout_sessions": {
      "name": "checkout_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "CheckoutSessionStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "billing_address": {
          "name": "billing_address",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "purchase_id": {
          "name": "purchase_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "customer_name": {
          "name": "customer_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "customer_email": {
          "name": "customer_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_setup_intent_id": {
          "name": "stripe_setup_intent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_payment_intent_id": {
          "name": "stripe_payment_intent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "payment_method_type": {
          "name": "payment_method_type",
          "type": "PaymentMethodType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "discount_id": {
          "name": "discount_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "successUrl": {
          "name": "successUrl",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cancelUrl": {
          "name": "cancelUrl",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "CheckoutSessionType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "output_metadata": {
          "name": "output_metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "output_name": {
          "name": "output_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "target_subscription_id": {
          "name": "target_subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "checkout_sessions_price_id_idx": {
          "name": "checkout_sessions_price_id_idx",
          "columns": [
            {
              "expression": "price_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "checkout_sessions_stripe_payment_intent_id_idx": {
          "name": "checkout_sessions_stripe_payment_intent_id_idx",
          "columns": [
            {
              "expression": "stripe_payment_intent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "checkout_sessions_organization_id_idx": {
          "name": "checkout_sessions_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "checkout_sessions_status_idx": {
          "name": "checkout_sessions_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "checkout_sessions_stripe_setup_intent_id_idx": {
          "name": "checkout_sessions_stripe_setup_intent_id_idx",
          "columns": [
            {
              "expression": "stripe_setup_intent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "checkout_sessions_purchase_id_idx": {
          "name": "checkout_sessions_purchase_id_idx",
          "columns": [
            {
              "expression": "purchase_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "checkout_sessions_discount_id_idx": {
          "name": "checkout_sessions_discount_id_idx",
          "columns": [
            {
              "expression": "discount_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "checkout_sessions_customer_id_idx": {
          "name": "checkout_sessions_customer_id_idx",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "checkout_sessions_price_id_prices_id_fk": {
          "name": "checkout_sessions_price_id_prices_id_fk",
          "tableFrom": "checkout_sessions",
          "tableTo": "prices",
          "columnsFrom": [
            "price_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "checkout_sessions_purchase_id_purchases_id_fk": {
          "name": "checkout_sessions_purchase_id_purchases_id_fk",
          "tableFrom": "checkout_sessions",
          "tableTo": "purchases",
          "columnsFrom": [
            "purchase_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "checkout_sessions_invoice_id_invoices_id_fk": {
          "name": "checkout_sessions_invoice_id_invoices_id_fk",
          "tableFrom": "checkout_sessions",
          "tableTo": "invoices",
          "columnsFrom": [
            "invoice_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "checkout_sessions_organization_id_organizations_id_fk": {
          "name": "checkout_sessions_organization_id_organizations_id_fk",
          "tableFrom": "checkout_sessions",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "checkout_sessions_customer_id_customers_id_fk": {
          "name": "checkout_sessions_customer_id_customers_id_fk",
          "tableFrom": "checkout_sessions",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "checkout_sessions_discount_id_discounts_id_fk": {
          "name": "checkout_sessions_discount_id_discounts_id_fk",
          "tableFrom": "checkout_sessions",
          "tableTo": "discounts",
          "columnsFrom": [
            "discount_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "checkout_sessions_id_unique": {
          "name": "checkout_sessions_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        },
        "Enable all actions for discounts in own organization": {
          "name": "Enable all actions for discounts in own organization",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.countries": {
      "name": "countries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "countries_name_unique_idx": {
          "name": "countries_name_unique_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "countries_code_unique_idx": {
          "name": "countries_code_unique_idx",
          "columns": [
            {
              "expression": "code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "countries_id_unique": {
          "name": "countries_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "countries_name_unique": {
          "name": "countries_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        },
        "countries_code_unique": {
          "name": "countries_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.customers": {
      "name": "customers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "invoice_number_base": {
          "name": "invoice_number_base",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "archived": {
          "name": "archived",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tax_id": {
          "name": "tax_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "logo_url": {
          "name": "logo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "icon_url": {
          "name": "icon_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "domain": {
          "name": "domain",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "billing_address": {
          "name": "billing_address",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "catalog_id": {
          "name": "catalog_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "customers_organization_id_idx": {
          "name": "customers_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "customers_email_organization_id_livemode_idx": {
          "name": "customers_email_organization_id_livemode_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "livemode",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "customers_user_id_idx": {
          "name": "customers_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "customers_catalog_id_idx": {
          "name": "customers_catalog_id_idx",
          "columns": [
            {
              "expression": "catalog_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "customers_organization_id_external_id_unique_idx": {
          "name": "customers_organization_id_external_id_unique_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "customers_organization_id_invoice_number_base_unique_idx": {
          "name": "customers_organization_id_invoice_number_base_unique_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "invoice_number_base",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "customers_stripe_customer_id_unique_idx": {
          "name": "customers_stripe_customer_id_unique_idx",
          "columns": [
            {
              "expression": "stripe_customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "customers_organization_id_organizations_id_fk": {
          "name": "customers_organization_id_organizations_id_fk",
          "tableFrom": "customers",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "customers_user_id_users_id_fk": {
          "name": "customers_user_id_users_id_fk",
          "tableFrom": "customers",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "customers_catalog_id_catalogs_id_fk": {
          "name": "customers_catalog_id_catalogs_id_fk",
          "tableFrom": "customers",
          "tableTo": "catalogs",
          "columnsFrom": [
            "catalog_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "customers_id_unique": {
          "name": "customers_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.discount_redemptions": {
      "name": "discount_redemptions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "discount_id": {
          "name": "discount_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "purchase_id": {
          "name": "purchase_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "discount_name": {
          "name": "discount_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "discount_code": {
          "name": "discount_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "discount_amount": {
          "name": "discount_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "discount_amount_type": {
          "name": "discount_amount_type",
          "type": "DiscountAmountType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "duration": {
          "name": "duration",
          "type": "DiscountDuration",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "number_of_payments": {
          "name": "number_of_payments",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "fully_redeemed": {
          "name": "fully_redeemed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "discount_redemptions_discount_id_idx": {
          "name": "discount_redemptions_discount_id_idx",
          "columns": [
            {
              "expression": "discount_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "discount_redemptions_purchase_id_idx": {
          "name": "discount_redemptions_purchase_id_idx",
          "columns": [
            {
              "expression": "purchase_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "discount_redemptions_purchase_id_unique_idx": {
          "name": "discount_redemptions_purchase_id_unique_idx",
          "columns": [
            {
              "expression": "purchase_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "discount_redemptions_subscription_id_idx": {
          "name": "discount_redemptions_subscription_id_idx",
          "columns": [
            {
              "expression": "subscription_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "discount_redemptions_discount_id_discounts_id_fk": {
          "name": "discount_redemptions_discount_id_discounts_id_fk",
          "tableFrom": "discount_redemptions",
          "tableTo": "discounts",
          "columnsFrom": [
            "discount_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "discount_redemptions_purchase_id_purchases_id_fk": {
          "name": "discount_redemptions_purchase_id_purchases_id_fk",
          "tableFrom": "discount_redemptions",
          "tableTo": "purchases",
          "columnsFrom": [
            "purchase_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "discount_redemptions_subscription_id_subscriptions_id_fk": {
          "name": "discount_redemptions_subscription_id_subscriptions_id_fk",
          "tableFrom": "discount_redemptions",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "discount_redemptions_id_unique": {
          "name": "discount_redemptions_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        },
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"discountId\" in (select \"discountId\" from \"Discounts\" where \"organization_id\" in (select \"organization_id\" from \"memberships\"))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.discounts": {
      "name": "discounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "amount_type": {
          "name": "amount_type",
          "type": "DiscountAmountType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "duration": {
          "name": "duration",
          "type": "DiscountDuration",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "number_of_payments": {
          "name": "number_of_payments",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "discounts_organization_id_idx": {
          "name": "discounts_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "discounts_code_idx": {
          "name": "discounts_code_idx",
          "columns": [
            {
              "expression": "code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "discounts_code_organization_id_unique_idx": {
          "name": "discounts_code_organization_id_unique_idx",
          "columns": [
            {
              "expression": "code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "discounts_organization_id_organizations_id_fk": {
          "name": "discounts_organization_id_organizations_id_fk",
          "tableFrom": "discounts",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "discounts_id_unique": {
          "name": "discounts_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        },
        "Enable all actions for discounts in own organization": {
          "name": "Enable all actions for discounts in own organization",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.events": {
      "name": "events",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "FlowgladEventType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "event_category": {
          "name": "event_category",
          "type": "EventCategory",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "event_retention_policy": {
          "name": "event_retention_policy",
          "type": "EventRetentionPolicy",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "raw_payload": {
          "name": "raw_payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "occurred_at": {
          "name": "occurred_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "submitted_at": {
          "name": "submitted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "processed_at": {
          "name": "processed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subject_entity": {
          "name": "subject_entity",
          "type": "EventNoun",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "subject_id": {
          "name": "subject_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "object_entity": {
          "name": "object_entity",
          "type": "EventNoun",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "object_id": {
          "name": "object_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "hash": {
          "name": "hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "events_type_idx": {
          "name": "events_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "events_event_category_idx": {
          "name": "events_event_category_idx",
          "columns": [
            {
              "expression": "event_category",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "events_event_retention_policy_idx": {
          "name": "events_event_retention_policy_idx",
          "columns": [
            {
              "expression": "event_retention_policy",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "events_subject_entity_idx": {
          "name": "events_subject_entity_idx",
          "columns": [
            {
              "expression": "subject_entity",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "events_object_entity_idx": {
          "name": "events_object_entity_idx",
          "columns": [
            {
              "expression": "object_entity",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "events_subject_entity_subject_id_idx": {
          "name": "events_subject_entity_subject_id_idx",
          "columns": [
            {
              "expression": "subject_entity",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "subject_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "events_object_entity_object_id_idx": {
          "name": "events_object_entity_object_id_idx",
          "columns": [
            {
              "expression": "object_entity",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "object_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "events_hash_unique_idx": {
          "name": "events_hash_unique_idx",
          "columns": [
            {
              "expression": "hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "events_organization_id_organizations_id_fk": {
          "name": "events_organization_id_organizations_id_fk",
          "tableFrom": "events",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "events_id_unique": {
          "name": "events_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "events_hash_unique": {
          "name": "events_hash_unique",
          "nullsNotDistinct": false,
          "columns": [
            "hash"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        },
        "Enable all actions for own organization": {
          "name": "Enable all actions for own organization",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.fee_calculations": {
      "name": "fee_calculations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "checkout_session_id": {
          "name": "checkout_session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "purchase_id": {
          "name": "purchase_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "discount_id": {
          "name": "discount_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "payment_method_type": {
          "name": "payment_method_type",
          "type": "PaymentMethodType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "discount_amount_fixed": {
          "name": "discount_amount_fixed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "payment_method_fee_fixed": {
          "name": "payment_method_fee_fixed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "base_amount": {
          "name": "base_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "international_fee_percentage": {
          "name": "international_fee_percentage",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "flowglad_fee_percentage": {
          "name": "flowglad_fee_percentage",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "billing_address": {
          "name": "billing_address",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "taxAmountFixed": {
          "name": "taxAmountFixed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "pretaxTotal": {
          "name": "pretaxTotal",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "stripeTaxCalculationId": {
          "name": "stripeTaxCalculationId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripeTaxTransactionId": {
          "name": "stripeTaxTransactionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "billing_period_id": {
          "name": "billing_period_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "currency": {
          "name": "currency",
          "type": "CurrencyCode",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "FeeCalculationType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "internalNotes": {
          "name": "internalNotes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "fee_calculations_organization_id_idx": {
          "name": "fee_calculations_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "fee_calculations_checkout_session_id_idx": {
          "name": "fee_calculations_checkout_session_id_idx",
          "columns": [
            {
              "expression": "checkout_session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "fee_calculations_purchase_id_idx": {
          "name": "fee_calculations_purchase_id_idx",
          "columns": [
            {
              "expression": "purchase_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "fee_calculations_discount_id_idx": {
          "name": "fee_calculations_discount_id_idx",
          "columns": [
            {
              "expression": "discount_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "fee_calculations_organization_id_organizations_id_fk": {
          "name": "fee_calculations_organization_id_organizations_id_fk",
          "tableFrom": "fee_calculations",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fee_calculations_checkout_session_id_checkout_sessions_id_fk": {
          "name": "fee_calculations_checkout_session_id_checkout_sessions_id_fk",
          "tableFrom": "fee_calculations",
          "tableTo": "checkout_sessions",
          "columnsFrom": [
            "checkout_session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fee_calculations_purchase_id_purchases_id_fk": {
          "name": "fee_calculations_purchase_id_purchases_id_fk",
          "tableFrom": "fee_calculations",
          "tableTo": "purchases",
          "columnsFrom": [
            "purchase_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fee_calculations_discount_id_discounts_id_fk": {
          "name": "fee_calculations_discount_id_discounts_id_fk",
          "tableFrom": "fee_calculations",
          "tableTo": "discounts",
          "columnsFrom": [
            "discount_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fee_calculations_price_id_prices_id_fk": {
          "name": "fee_calculations_price_id_prices_id_fk",
          "tableFrom": "fee_calculations",
          "tableTo": "prices",
          "columnsFrom": [
            "price_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fee_calculations_billing_period_id_billing_periods_id_fk": {
          "name": "fee_calculations_billing_period_id_billing_periods_id_fk",
          "tableFrom": "fee_calculations",
          "tableTo": "billing_periods",
          "columnsFrom": [
            "billing_period_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "fee_calculations_id_unique": {
          "name": "fee_calculations_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        },
        "Enable select for own organization": {
          "name": "Enable select for own organization",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.files": {
      "name": "files",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "size_kb": {
          "name": "size_kb",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "content_type": {
          "name": "content_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "object_key": {
          "name": "object_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "cdn_url": {
          "name": "cdn_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "etag": {
          "name": "etag",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content_hash": {
          "name": "content_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "files_organization_id_idx": {
          "name": "files_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "files_object_key_unique_idx": {
          "name": "files_object_key_unique_idx",
          "columns": [
            {
              "expression": "object_key",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "files_organization_id_organizations_id_fk": {
          "name": "files_organization_id_organizations_id_fk",
          "tableFrom": "files",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "files_product_id_products_id_fk": {
          "name": "files_product_id_products_id_fk",
          "tableFrom": "files",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "files_id_unique": {
          "name": "files_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "files_object_key_unique": {
          "name": "files_object_key_unique",
          "nullsNotDistinct": false,
          "columns": [
            "object_key"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        },
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")",
          "withCheck": "\"product_id\" is null OR \"product_id\" in (select \"id\" from \"products\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.invoice_line_items": {
      "name": "invoice_line_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price": {
          "name": "price",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "invoice_line_items_invoice_id_idx": {
          "name": "invoice_line_items_invoice_id_idx",
          "columns": [
            {
              "expression": "invoice_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoice_line_items_price_id_idx": {
          "name": "invoice_line_items_price_id_idx",
          "columns": [
            {
              "expression": "price_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoice_line_items_invoice_id_invoices_id_fk": {
          "name": "invoice_line_items_invoice_id_invoices_id_fk",
          "tableFrom": "invoice_line_items",
          "tableTo": "invoices",
          "columnsFrom": [
            "invoice_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "invoice_line_items_price_id_prices_id_fk": {
          "name": "invoice_line_items_price_id_prices_id_fk",
          "tableFrom": "invoice_line_items",
          "tableTo": "prices",
          "columnsFrom": [
            "price_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "invoice_line_items_id_unique": {
          "name": "invoice_line_items_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.invoices": {
      "name": "invoices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "purchase_id": {
          "name": "purchase_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_number": {
          "name": "invoice_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "invoice_date": {
          "name": "invoice_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "billing_period_id": {
          "name": "billing_period_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_payment_intent_id": {
          "name": "stripe_payment_intent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "InvoiceStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "billing_period_start_date": {
          "name": "billing_period_start_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "billing_period_end_date": {
          "name": "billing_period_end_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "owner_membership_id": {
          "name": "owner_membership_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "pdf_url": {
          "name": "pdf_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "receipt_pdf_url": {
          "name": "receipt_pdf_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "memo": {
          "name": "memo",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bank_payment_only": {
          "name": "bank_payment_only",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "type": {
          "name": "type",
          "type": "InvoiceType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "currency": {
          "name": "currency",
          "type": "CurrencyCode",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "tax_amount": {
          "name": "tax_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "subtotal": {
          "name": "subtotal",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_tax_calculation_id": {
          "name": "stripe_tax_calculation_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_tax_transaction_id": {
          "name": "stripe_tax_transaction_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tax_type": {
          "name": "tax_type",
          "type": "TaxType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "tax_country": {
          "name": "tax_country",
          "type": "CountryCode",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "tax_state": {
          "name": "tax_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tax_rate_percentage": {
          "name": "tax_rate_percentage",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "application_fee": {
          "name": "application_fee",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "invoices_invoice_number_unique_idx": {
          "name": "invoices_invoice_number_unique_idx",
          "columns": [
            {
              "expression": "invoice_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_purchase_id_idx": {
          "name": "invoices_purchase_id_idx",
          "columns": [
            {
              "expression": "purchase_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_status_idx": {
          "name": "invoices_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_customer_id_idx": {
          "name": "invoices_customer_id_idx",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_stripe_payment_intent_id_idx": {
          "name": "invoices_stripe_payment_intent_id_idx",
          "columns": [
            {
              "expression": "stripe_payment_intent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_organization_id_idx": {
          "name": "invoices_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoices_purchase_id_purchases_id_fk": {
          "name": "invoices_purchase_id_purchases_id_fk",
          "tableFrom": "invoices",
          "tableTo": "purchases",
          "columnsFrom": [
            "purchase_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "invoices_billing_period_id_billing_periods_id_fk": {
          "name": "invoices_billing_period_id_billing_periods_id_fk",
          "tableFrom": "invoices",
          "tableTo": "billing_periods",
          "columnsFrom": [
            "billing_period_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "invoices_customer_id_customers_id_fk": {
          "name": "invoices_customer_id_customers_id_fk",
          "tableFrom": "invoices",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "invoices_organization_id_organizations_id_fk": {
          "name": "invoices_organization_id_organizations_id_fk",
          "tableFrom": "invoices",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "invoices_subscription_id_subscriptions_id_fk": {
          "name": "invoices_subscription_id_subscriptions_id_fk",
          "tableFrom": "invoices",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "invoices_owner_membership_id_memberships_id_fk": {
          "name": "invoices_owner_membership_id_memberships_id_fk",
          "tableFrom": "invoices",
          "tableTo": "memberships",
          "columnsFrom": [
            "owner_membership_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "invoices_id_unique": {
          "name": "invoices_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "invoices_invoice_number_unique": {
          "name": "invoices_invoice_number_unique",
          "nullsNotDistinct": false,
          "columns": [
            "invoice_number"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.links": {
      "name": "links",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "links_organization_id_idx": {
          "name": "links_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "links_product_id_idx": {
          "name": "links_product_id_idx",
          "columns": [
            {
              "expression": "product_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "links_organization_id_organizations_id_fk": {
          "name": "links_organization_id_organizations_id_fk",
          "tableFrom": "links",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "links_product_id_products_id_fk": {
          "name": "links_product_id_products_id_fk",
          "tableFrom": "links",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "links_id_unique": {
          "name": "links_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")",
          "withCheck": "\"product_id\" is null OR \"product_id\" in (select \"id\" from \"products\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.memberships": {
      "name": "memberships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "focused": {
          "name": "focused",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "memberships_user_id_idx": {
          "name": "memberships_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memberships_organization_id_idx": {
          "name": "memberships_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memberships_user_id_organization_id_unique_idx": {
          "name": "memberships_user_id_organization_id_unique_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "memberships_user_id_users_id_fk": {
          "name": "memberships_user_id_users_id_fk",
          "tableFrom": "memberships",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "memberships_organization_id_organizations_id_fk": {
          "name": "memberships_organization_id_organizations_id_fk",
          "tableFrom": "memberships",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "memberships_id_unique": {
          "name": "memberships_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"UserId\" = requesting_user_id()"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "message_sent_at": {
          "name": "message_sent_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "organization_member_id": {
          "name": "organization_member_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "raw_text": {
          "name": "raw_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "platform": {
          "name": "platform",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "platform_thread_id": {
          "name": "platform_thread_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "platform_channel_id": {
          "name": "platform_channel_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "platform_id": {
          "name": "platform_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "platform_user_id": {
          "name": "platform_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "messages_platform_id_idx": {
          "name": "messages_platform_id_idx",
          "columns": [
            {
              "expression": "platform_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "messages_platform_thread_id_idx": {
          "name": "messages_platform_thread_id_idx",
          "columns": [
            {
              "expression": "platform_thread_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "messages_platform_id_platform_unique_idx": {
          "name": "messages_platform_id_platform_unique_idx",
          "columns": [
            {
              "expression": "platform_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "platform",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "messages_customer_id_customers_id_fk": {
          "name": "messages_customer_id_customers_id_fk",
          "tableFrom": "messages",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "messages_organization_member_id_memberships_id_fk": {
          "name": "messages_organization_member_id_memberships_id_fk",
          "tableFrom": "messages",
          "tableTo": "memberships",
          "columnsFrom": [
            "organization_member_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "messages_id_unique": {
          "name": "messages_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.organizations": {
      "name": "organizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_account_id": {
          "name": "stripe_account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "domain": {
          "name": "domain",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country_id": {
          "name": "country_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "logo_url": {
          "name": "logo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tagline": {
          "name": "tagline",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subdomain_slug": {
          "name": "subdomain_slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "payouts_enabled": {
          "name": "payouts_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "onboarding_status": {
          "name": "onboarding_status",
          "type": "BusinessOnboardingStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "fee_percentage": {
          "name": "fee_percentage",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.65'"
        },
        "default_currency": {
          "name": "default_currency",
          "type": "CurrencyCode",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "billing_address": {
          "name": "billing_address",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "contact_email": {
          "name": "contact_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_connect_contract_type": {
          "name": "stripe_connect_contract_type",
          "type": "StripeConnectContractType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'platform'"
        },
        "allow_multiple_subscriptions_per_customer": {
          "name": "allow_multiple_subscriptions_per_customer",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "feature_flags": {
          "name": "feature_flags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "organizations_name_idx": {
          "name": "organizations_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "organizations_stripe_account_id_unique_idx": {
          "name": "organizations_stripe_account_id_unique_idx",
          "columns": [
            {
              "expression": "stripe_account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "organizations_domain_unique_idx": {
          "name": "organizations_domain_unique_idx",
          "columns": [
            {
              "expression": "domain",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "organizations_external_id_unique_idx": {
          "name": "organizations_external_id_unique_idx",
          "columns": [
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "organizations_country_id_idx": {
          "name": "organizations_country_id_idx",
          "columns": [
            {
              "expression": "country_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "organizations_country_id_countries_id_fk": {
          "name": "organizations_country_id_countries_id_fk",
          "tableFrom": "organizations",
          "tableTo": "countries",
          "columnsFrom": [
            "country_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "organizations_id_unique": {
          "name": "organizations_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "organizations_stripe_account_id_unique": {
          "name": "organizations_stripe_account_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "stripe_account_id"
          ]
        },
        "organizations_domain_unique": {
          "name": "organizations_domain_unique",
          "nullsNotDistinct": false,
          "columns": [
            "domain"
          ]
        },
        "organizations_subdomain_slug_unique": {
          "name": "organizations_subdomain_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "subdomain_slug"
          ]
        },
        "organizations_external_id_unique": {
          "name": "organizations_external_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "external_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.payment_methods": {
      "name": "payment_methods",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "billing_details": {
          "name": "billing_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "PaymentMethodType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "default": {
          "name": "default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "payment_method_data": {
          "name": "payment_method_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_payment_method_id": {
          "name": "stripe_payment_method_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "payment_methods_customer_id_idx": {
          "name": "payment_methods_customer_id_idx",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payment_methods_type_idx": {
          "name": "payment_methods_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payment_methods_external_id_unique_idx": {
          "name": "payment_methods_external_id_unique_idx",
          "columns": [
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "payment_methods_customer_id_customers_id_fk": {
          "name": "payment_methods_customer_id_customers_id_fk",
          "tableFrom": "payment_methods",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "payment_methods_id_unique": {
          "name": "payment_methods_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations via customer": {
          "name": "Enable read for own organizations via customer",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"customerId\" in (select \"id\" from \"customers\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.payments": {
      "name": "payments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "payment_method": {
          "name": "payment_method",
          "type": "PaymentMethod",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "Currency",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "PaymentStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "charge_date": {
          "name": "charge_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "settlement_date": {
          "name": "settlement_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "receipt_number": {
          "name": "receipt_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "receipt_url": {
          "name": "receipt_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "purchase_id": {
          "name": "purchase_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "payment_method_id": {
          "name": "payment_method_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "billing_period_id": {
          "name": "billing_period_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_payment_intent_id": {
          "name": "stripe_payment_intent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_charge_id": {
          "name": "stripe_charge_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tax_amount": {
          "name": "tax_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "subtotal": {
          "name": "subtotal",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_tax_calculation_id": {
          "name": "stripe_tax_calculation_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_tax_transaction_id": {
          "name": "stripe_tax_transaction_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tax_type": {
          "name": "tax_type",
          "type": "TaxType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "tax_country": {
          "name": "tax_country",
          "type": "CountryCode",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "tax_state": {
          "name": "tax_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tax_rate_percentage": {
          "name": "tax_rate_percentage",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "application_fee": {
          "name": "application_fee",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "refunded": {
          "name": "refunded",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "refunded_amount": {
          "name": "refunded_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "refunded_at": {
          "name": "refunded_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "failure_message": {
          "name": "failure_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "failure_code": {
          "name": "failure_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "payments_invoice_id_idx": {
          "name": "payments_invoice_id_idx",
          "columns": [
            {
              "expression": "invoice_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_organization_id_idx": {
          "name": "payments_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_payment_method_idx": {
          "name": "payments_payment_method_idx",
          "columns": [
            {
              "expression": "payment_method",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_customer_id_idx": {
          "name": "payments_customer_id_idx",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_status_idx": {
          "name": "payments_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_currency_idx": {
          "name": "payments_currency_idx",
          "columns": [
            {
              "expression": "currency",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_purchase_id_idx": {
          "name": "payments_purchase_id_idx",
          "columns": [
            {
              "expression": "purchase_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_stripe_charge_id_unique_idx": {
          "name": "payments_stripe_charge_id_unique_idx",
          "columns": [
            {
              "expression": "stripe_charge_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_subscription_id_idx": {
          "name": "payments_subscription_id_idx",
          "columns": [
            {
              "expression": "subscription_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "payments_invoice_id_invoices_id_fk": {
          "name": "payments_invoice_id_invoices_id_fk",
          "tableFrom": "payments",
          "tableTo": "invoices",
          "columnsFrom": [
            "invoice_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "payments_organization_id_organizations_id_fk": {
          "name": "payments_organization_id_organizations_id_fk",
          "tableFrom": "payments",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "payments_customer_id_customers_id_fk": {
          "name": "payments_customer_id_customers_id_fk",
          "tableFrom": "payments",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "payments_purchase_id_purchases_id_fk": {
          "name": "payments_purchase_id_purchases_id_fk",
          "tableFrom": "payments",
          "tableTo": "purchases",
          "columnsFrom": [
            "purchase_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "payments_subscription_id_subscriptions_id_fk": {
          "name": "payments_subscription_id_subscriptions_id_fk",
          "tableFrom": "payments",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "payments_payment_method_id_payment_methods_id_fk": {
          "name": "payments_payment_method_id_payment_methods_id_fk",
          "tableFrom": "payments",
          "tableTo": "payment_methods",
          "columnsFrom": [
            "payment_method_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "payments_billing_period_id_billing_periods_id_fk": {
          "name": "payments_billing_period_id_billing_periods_id_fk",
          "tableFrom": "payments",
          "tableTo": "billing_periods",
          "columnsFrom": [
            "billing_period_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "payments_id_unique": {
          "name": "payments_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable select for own organization": {
          "name": "Enable select for own organization",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        },
        "Enable update for own organization": {
          "name": "Enable update for own organization",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.prices": {
      "name": "prices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "interval_unit": {
          "name": "interval_unit",
          "type": "IntervalUnit",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "intervalCount": {
          "name": "intervalCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "PriceType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "trial_period_days": {
          "name": "trial_period_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "setup_fee_amount": {
          "name": "setup_fee_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "unit_price": {
          "name": "unit_price",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "currency": {
          "name": "currency",
          "type": "CurrencyCode",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "usage_meter_id": {
          "name": "usage_meter_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "prices_type_idx": {
          "name": "prices_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "prices_product_id_idx": {
          "name": "prices_product_id_idx",
          "columns": [
            {
              "expression": "product_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "prices_external_id_product_id_unique_idx": {
          "name": "prices_external_id_product_id_unique_idx",
          "columns": [
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "product_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "prices_usage_meter_id_idx": {
          "name": "prices_usage_meter_id_idx",
          "columns": [
            {
              "expression": "usage_meter_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "prices_product_id_products_id_fk": {
          "name": "prices_product_id_products_id_fk",
          "tableFrom": "prices",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "prices_usage_meter_id_usage_meters_id_fk": {
          "name": "prices_usage_meter_id_usage_meters_id_fk",
          "tableFrom": "prices",
          "tableTo": "usage_meters",
          "columnsFrom": [
            "usage_meter_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "prices_id_unique": {
          "name": "prices_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "On update, ensure usage meter belongs to same organization as product": {
          "name": "On update, ensure usage meter belongs to same organization as product",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"usage_meter_id\" IS NULL OR \"usage_meter_id\" IN (\n  SELECT \"id\" FROM \"usage_meters\"\n  WHERE \"usage_meters\".\"organization_id\" = (\n    SELECT \"organization_id\" FROM \"products\" \n    WHERE \"products\".\"id\" = \"prices\".\"product_id\"\n  )\n)"
        },
        "Enable all for self organizations via products": {
          "name": "Enable all for self organizations via products",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"product_id\" in (select \"id\" from \"products\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.products": {
      "name": "products",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "display_features": {
          "name": "display_features",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "singular_quantity_label": {
          "name": "singular_quantity_label",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "plural_quantity_label": {
          "name": "plural_quantity_label",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "catalog_id": {
          "name": "catalog_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "products_organization_id_idx": {
          "name": "products_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "products_active_idx": {
          "name": "products_active_idx",
          "columns": [
            {
              "expression": "active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "products_external_id_unique_idx": {
          "name": "products_external_id_unique_idx",
          "columns": [
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "products_organization_id_organizations_id_fk": {
          "name": "products_organization_id_organizations_id_fk",
          "tableFrom": "products",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "products_catalog_id_catalogs_id_fk": {
          "name": "products_catalog_id_catalogs_id_fk",
          "tableFrom": "products",
          "tableTo": "catalogs",
          "columnsFrom": [
            "catalog_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "products_id_unique": {
          "name": "products_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.proper_nouns": {
      "name": "proper_nouns",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "entity_id": {
          "name": "entity_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "entity_type": {
          "name": "entity_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "proper_nouns_organization_id_idx": {
          "name": "proper_nouns_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "proper_nouns_entity_id_entity_type_unique_idx": {
          "name": "proper_nouns_entity_id_entity_type_unique_idx",
          "columns": [
            {
              "expression": "entity_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "entity_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "proper_nouns_entity_type_entity_id_organization_id_idx": {
          "name": "proper_nouns_entity_type_entity_id_organization_id_idx",
          "columns": [
            {
              "expression": "entity_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "entity_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "proper_nouns_name_idx": {
          "name": "proper_nouns_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "proper_noun_name_search_index": {
          "name": "proper_noun_name_search_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"name\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "proper_nouns_entity_id_idx": {
          "name": "proper_nouns_entity_id_idx",
          "columns": [
            {
              "expression": "entity_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "proper_nouns_organization_id_organizations_id_fk": {
          "name": "proper_nouns_organization_id_organizations_id_fk",
          "tableFrom": "proper_nouns",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "proper_nouns_id_unique": {
          "name": "proper_nouns_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"organizationId\" in (select \"organizationId\" from \"Memberships\" where \"UserId\" = requesting_user_id())"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.purchase_access_sessions": {
      "name": "purchase_access_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "purchase_id": {
          "name": "purchase_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "source": {
          "name": "source",
          "type": "PurchaseAccessSessionSource",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "granted": {
          "name": "granted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "purchase_access_sessions_purchase_id_idx": {
          "name": "purchase_access_sessions_purchase_id_idx",
          "columns": [
            {
              "expression": "purchase_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "purchase_access_sessions_token_unique_idx": {
          "name": "purchase_access_sessions_token_unique_idx",
          "columns": [
            {
              "expression": "token",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "purchase_access_sessions_purchase_id_purchases_id_fk": {
          "name": "purchase_access_sessions_purchase_id_purchases_id_fk",
          "tableFrom": "purchase_access_sessions",
          "tableTo": "purchases",
          "columnsFrom": [
            "purchase_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "purchase_access_sessions_id_unique": {
          "name": "purchase_access_sessions_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.purchases": {
      "name": "purchases",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "PurchaseStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'open'"
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "billing_cycle_anchor": {
          "name": "billing_cycle_anchor",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "price_type": {
          "name": "price_type",
          "type": "PriceType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'single_payment'"
        },
        "trial_period_days": {
          "name": "trial_period_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "price_per_billing_cycle": {
          "name": "price_per_billing_cycle",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "interval_unit": {
          "name": "interval_unit",
          "type": "IntervalUnit",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "interval_count": {
          "name": "interval_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "first_invoice_value": {
          "name": "first_invoice_value",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "total_purchase_value": {
          "name": "total_purchase_value",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "bank_payment_only": {
          "name": "bank_payment_only",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "purchase_date": {
          "name": "purchase_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "proposal": {
          "name": "proposal",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "archived": {
          "name": "archived",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "billing_address": {
          "name": "billing_address",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "purchases_customer_id_idx": {
          "name": "purchases_customer_id_idx",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "purchases_organization_id_idx": {
          "name": "purchases_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "purchases_price_id_idx": {
          "name": "purchases_price_id_idx",
          "columns": [
            {
              "expression": "price_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "purchases_customer_id_customers_id_fk": {
          "name": "purchases_customer_id_customers_id_fk",
          "tableFrom": "purchases",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "purchases_organization_id_organizations_id_fk": {
          "name": "purchases_organization_id_organizations_id_fk",
          "tableFrom": "purchases",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "purchases_price_id_prices_id_fk": {
          "name": "purchases_price_id_prices_id_fk",
          "tableFrom": "purchases",
          "tableTo": "prices",
          "columnsFrom": [
            "price_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "purchases_id_unique": {
          "name": "purchases_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.subscription_items": {
      "name": "subscription_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "added_date": {
          "name": "added_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "unit_price": {
          "name": "unit_price",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "subscription_items_subscription_id_idx": {
          "name": "subscription_items_subscription_id_idx",
          "columns": [
            {
              "expression": "subscription_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "subscription_items_price_id_idx": {
          "name": "subscription_items_price_id_idx",
          "columns": [
            {
              "expression": "price_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "subscription_items_external_id_unique_idx": {
          "name": "subscription_items_external_id_unique_idx",
          "columns": [
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subscription_items_subscription_id_subscriptions_id_fk": {
          "name": "subscription_items_subscription_id_subscriptions_id_fk",
          "tableFrom": "subscription_items",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "subscription_items_price_id_prices_id_fk": {
          "name": "subscription_items_price_id_prices_id_fk",
          "tableFrom": "subscription_items",
          "tableTo": "prices",
          "columnsFrom": [
            "price_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "subscription_items_id_unique": {
          "name": "subscription_items_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable actions for own organizations via subscriptions": {
          "name": "Enable actions for own organizations via subscriptions",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"subscriptionId\" in (select \"id\" from \"Subscriptions\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.subscriptions": {
      "name": "subscriptions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "SubscriptionStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "default_payment_method_id": {
          "name": "default_payment_method_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "backup_payment_method_id": {
          "name": "backup_payment_method_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_setup_intent_id": {
          "name": "stripe_setup_intent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "trial_end": {
          "name": "trial_end",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "current_billing_period_start": {
          "name": "current_billing_period_start",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "current_billing_period_end": {
          "name": "current_billing_period_end",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "canceled_at": {
          "name": "canceled_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "cancel_scheduled_at": {
          "name": "cancel_scheduled_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "run_billing_at_period_start": {
          "name": "run_billing_at_period_start",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "interval": {
          "name": "interval",
          "type": "IntervalUnit",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "interval_count": {
          "name": "interval_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "billing_cycle_anchor_date": {
          "name": "billing_cycle_anchor_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "subscriptions_customer_id_idx": {
          "name": "subscriptions_customer_id_idx",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "subscriptions_price_id_idx": {
          "name": "subscriptions_price_id_idx",
          "columns": [
            {
              "expression": "price_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "subscriptions_status_idx": {
          "name": "subscriptions_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "subscriptions_stripe_setup_intent_id_unique_idx": {
          "name": "subscriptions_stripe_setup_intent_id_unique_idx",
          "columns": [
            {
              "expression": "stripe_setup_intent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "subscriptions_external_id_organization_id_unique_idx": {
          "name": "subscriptions_external_id_organization_id_unique_idx",
          "columns": [
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subscriptions_customer_id_customers_id_fk": {
          "name": "subscriptions_customer_id_customers_id_fk",
          "tableFrom": "subscriptions",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "subscriptions_organization_id_organizations_id_fk": {
          "name": "subscriptions_organization_id_organizations_id_fk",
          "tableFrom": "subscriptions",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "subscriptions_default_payment_method_id_payment_methods_id_fk": {
          "name": "subscriptions_default_payment_method_id_payment_methods_id_fk",
          "tableFrom": "subscriptions",
          "tableTo": "payment_methods",
          "columnsFrom": [
            "default_payment_method_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "subscriptions_backup_payment_method_id_payment_methods_id_fk": {
          "name": "subscriptions_backup_payment_method_id_payment_methods_id_fk",
          "tableFrom": "subscriptions",
          "tableTo": "payment_methods",
          "columnsFrom": [
            "backup_payment_method_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "subscriptions_price_id_prices_id_fk": {
          "name": "subscriptions_price_id_prices_id_fk",
          "tableFrom": "subscriptions",
          "tableTo": "prices",
          "columnsFrom": [
            "price_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "subscriptions_id_unique": {
          "name": "subscriptions_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable actions for own organizations via customer": {
          "name": "Enable actions for own organizations via customer",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"customer_id\" in (select \"id\" from \"customers\")"
        },
        "Forbid deletion": {
          "name": "Forbid deletion",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "false"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.usage_events": {
      "name": "usage_events",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "usage_meter_id": {
          "name": "usage_meter_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "billing_period_id": {
          "name": "billing_period_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "usage_date": {
          "name": "usage_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "transaction_id": {
          "name": "transaction_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "properties": {
          "name": "properties",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "usage_events_customer_id_idx": {
          "name": "usage_events_customer_id_idx",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usage_events_usage_meter_id_idx": {
          "name": "usage_events_usage_meter_id_idx",
          "columns": [
            {
              "expression": "usage_meter_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usage_events_billing_period_id_idx": {
          "name": "usage_events_billing_period_id_idx",
          "columns": [
            {
              "expression": "billing_period_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usage_events_subscription_id_idx": {
          "name": "usage_events_subscription_id_idx",
          "columns": [
            {
              "expression": "subscription_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usage_events_price_id_idx": {
          "name": "usage_events_price_id_idx",
          "columns": [
            {
              "expression": "price_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usage_events_transaction_id_usage_meter_id_unique_idx": {
          "name": "usage_events_transaction_id_usage_meter_id_unique_idx",
          "columns": [
            {
              "expression": "transaction_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "usage_meter_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "usage_events_customer_id_customers_id_fk": {
          "name": "usage_events_customer_id_customers_id_fk",
          "tableFrom": "usage_events",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "usage_events_subscription_id_subscriptions_id_fk": {
          "name": "usage_events_subscription_id_subscriptions_id_fk",
          "tableFrom": "usage_events",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "usage_events_usage_meter_id_usage_meters_id_fk": {
          "name": "usage_events_usage_meter_id_usage_meters_id_fk",
          "tableFrom": "usage_events",
          "tableTo": "usage_meters",
          "columnsFrom": [
            "usage_meter_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "usage_events_billing_period_id_billing_periods_id_fk": {
          "name": "usage_events_billing_period_id_billing_periods_id_fk",
          "tableFrom": "usage_events",
          "tableTo": "billing_periods",
          "columnsFrom": [
            "billing_period_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "usage_events_price_id_prices_id_fk": {
          "name": "usage_events_price_id_prices_id_fk",
          "tableFrom": "usage_events",
          "tableTo": "prices",
          "columnsFrom": [
            "price_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "usage_events_id_unique": {
          "name": "usage_events_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"customer_id\" in (select \"id\" from \"customers\" where \"organization_id\" in (select \"organization_id\" from \"memberships\"))"
        },
        "On insert, only allow usage events for prices with matching usage meter": {
          "name": "On insert, only allow usage events for prices with matching usage meter",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"price_id\" in (select \"id\" from \"prices\" where \"prices\".\"usage_meter_id\" = \"usage_meter_id\")"
        },
        "On update, only allow usage events for prices with matching usage meter": {
          "name": "On update, only allow usage events for prices with matching usage meter",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"price_id\" in (select \"id\" from \"prices\" where \"prices\".\"usage_meter_id\" = \"usage_meter_id\")"
        },
        "On insert, only allow usage events for subscriptions with matching customer": {
          "name": "On insert, only allow usage events for subscriptions with matching customer",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"subscription_id\" in (select \"id\" from \"subscriptions\" where \"subscriptions\".\"customer_id\" = \"customer_id\")"
        },
        "On update, only allow usage events for subscriptions with matching customer": {
          "name": "On update, only allow usage events for subscriptions with matching customer",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"subscription_id\" in (select \"id\" from \"subscriptions\" where \"subscriptions\".\"customer_id\" = \"customer_id\")"
        },
        "On insert, only allow usage events for billing periods with matching subscription": {
          "name": "On insert, only allow usage events for billing periods with matching subscription",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"billing_period_id\" in (select \"id\" from \"billing_periods\" where \"billing_periods\".\"subscription_id\" = \"subscription_id\")"
        },
        "On update, only allow usage events for billing periods with matching subscription": {
          "name": "On update, only allow usage events for billing periods with matching subscription",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"billing_period_id\" in (select \"id\" from \"billing_periods\" where \"billing_periods\".\"subscription_id\" = \"subscription_id\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.usage_meters": {
      "name": "usage_meters",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "livemode": {
          "name": "livemode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "catalog_id": {
          "name": "catalog_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "aggregation_type": {
          "name": "aggregation_type",
          "type": "UsageMeterAggregationType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'sum'"
        }
      },
      "indexes": {
        "usage_meters_organization_id_idx": {
          "name": "usage_meters_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usage_meters_catalog_id_idx": {
          "name": "usage_meters_catalog_id_idx",
          "columns": [
            {
              "expression": "catalog_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "usage_meters_organization_id_organizations_id_fk": {
          "name": "usage_meters_organization_id_organizations_id_fk",
          "tableFrom": "usage_meters",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "usage_meters_catalog_id_catalogs_id_fk": {
          "name": "usage_meters_catalog_id_catalogs_id_fk",
          "tableFrom": "usage_meters",
          "tableTo": "catalogs",
          "columnsFrom": [
            "catalog_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "usage_meters_id_unique": {
          "name": "usage_meters_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {
        "Enable read for own organizations": {
          "name": "Enable read for own organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"organization_id\" in (select \"organization_id\" from \"memberships\")"
        },
        "Check mode": {
          "name": "Check mode",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "current_setting('app.livemode')::boolean = livemode"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "clerk_id": {
          "name": "clerk_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "users_name_idx": {
          "name": "users_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_idx": {
          "name": "users_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_id_unique": {
          "name": "users_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "users_clerk_id_unique": {
          "name": "users_clerk_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "clerk_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}