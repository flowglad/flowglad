###############################################
# Build stage
###############################################
FROM node:20-bookworm-slim AS builder

# Avoid prompts from apt
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /app

# Install Bun
ENV BUN_INSTALL=/root/.bun
RUN curl -fsSL https://bun.sh/install | bash
ENV PATH="${BUN_INSTALL}/bin:${PATH}"

# Increase Node.js heap for build to avoid OOM
ARG NODE_OPTIONS=--max-old-space-size=6144
ENV NODE_OPTIONS=${NODE_OPTIONS}

# Install system deps that are commonly needed by Next.js tooling and node-gyp
RUN apt-get update && \
  apt-get install -y --no-install-recommends \
  ca-certificates \
  git \
  python3 \
  build-essential && \
  rm -rf /var/lib/apt/lists/*

# Pre-copy manifest and config files to maximize cache
COPY package.json bun.lock next.config.mjs bunfig.toml ./

# Prepare a minimal env file so prebuild step using dotenvx doesn't fail
RUN touch .env.local

# Install dependencies (full deps for build)
RUN bun install --frozen-lockfile

# Copy the rest of the source
COPY . .

RUN --mount=type=cache,id=bun-install-cache,target=/root/.bun/install/cache \
  --mount=type=cache,id=tool-cache,target=/app/node_modules/.cache \
  --mount=type=cache,id=vite-cache,target=/app/node_modules/.vite \
  --mount=type=cache,id=next-cache,target=/app/.next/cache \
  bun run build

###############################################
# Runtime stage
###############################################
FROM node:20-bookworm-slim AS runtime

ENV VERCEL_ENV=production \
  NODE_ENV=production \
  PORT=3000 \
  HOSTNAME=0.0.0.0

WORKDIR /app

# Create a non-root user for security
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs

# Copy standalone server and required assets from the builder
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public

# Optional: copy any additional files your app needs at runtime
# COPY --from=builder /app/next.config.mjs ./next.config.mjs

# Drop privileges
USER nodejs

EXPOSE 3000

CMD ["node", "server.js"]
