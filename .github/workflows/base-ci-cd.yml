name: Base CI

on:
  pull_request:
  merge_group:
  workflow_call:

permissions: read-all

jobs:
  flowglad-next-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: platform/flowglad-next
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Node.js
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # v3
        with:
          node-version: '18'
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2.14'
          cache: true
      - name: Install dependencies
        run: bun run install-packages --no-progress
      - name: Run linting and typechecking
        run: bun run check

  openapi-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: platform/flowglad-next
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Node.js
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # v3
        with:
          node-version: '18'
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2.14'
          cache: true
      - name: Install dependencies
        run: bun run install-packages --no-progress
      - name: Generate OpenAPI documentation
        run: bunx tsx src/scripts/openApiDoc.ts --skip-env-pull

  flowglad-next-unit-tests:
    uses: ./.github/workflows/flowglad-next-sharded-unit-tests.yml

  flowglad-next-integration-tests:
    # Only run in the merge queue so that we don't slow down the PR development
    # iteration cycle.
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: platform/flowglad-next
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # v2
      - name: Build Docker image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5
        with:
          context: ./platform/flowglad-next
          load: true
          tags: flowglad-next:latest
      - name: Run Docker container
        run: docker run -d -p 3000:3000 --name flowglad-next-app flowglad-next:latest

  packages-build-and-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Node.js
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # v3
        with:
          node-version: '18'
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2.14'
          cache: true
      - name: Install dependencies
        run: bun install --no-progress
      - name: Run build (all packages)
        env:
          TURBO_FORCE: "1"
          TURBO_NO_DAEMON: "1"
        run: bun run build
      - name: Run linting and typechecking (all packages)
        run: bun run check

  packages-react-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Node.js
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # v3
        with:
          node-version: '18'
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2.14'
          cache: true
      - name: Install dependencies
        run: bun install --no-progress
      - name: Run build
        env:
          TURBO_FORCE: "1"
          TURBO_NO_DAEMON: "1"
        run: bun run build
      - name: Run tests
        run: bun run test
        working-directory: packages/react

  check-todo:
    runs-on: ubuntu-latest
    name: Check for todo comments
    steps:
      - name: Install ripgrep
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install ripgrep
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Run todo check
        run: ./ci/check_todo.sh

  check-job-dependencies:
    runs-on: ubuntu-latest
    name: Check all-jobs-succeed depends on all jobs
    steps:
      - name: Install yq (for YAML parsing)
        run: go install github.com/mikefarah/yq/v4@latest
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Run dependency check
        run: ./ci/check_job_dependencies.sh
        
  all-jobs-succeed:
      name: All checks succeeded
      # On failure, we run and unconditionally exit with a failing status code.
      # On success, this job is skipped. Jobs skipped using `if:` are considered
      # to have succeeded:
      #
      # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
      if: failure()
      runs-on: ubuntu-latest
      needs: [flowglad-next-lint, openapi-check, flowglad-next-unit-tests, flowglad-next-integration-tests, packages-build-and-lint, packages-react-tests, check-todo, check-job-dependencies]
      steps:
        - name: Mark the job as failed
          run: exit 1
