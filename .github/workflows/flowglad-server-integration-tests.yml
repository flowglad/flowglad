name: FlowgladServer Integration Tests
      
on:
  push:
    branches:
      - main
      - staging
      - integration-tests

    paths:
      - 'packages/server/**'
      - 'platform/flowglad-next/**'
      - '.github/workflows/flowglad-server-integration-tests.yml'
  pull_request:
    branches:
      - main
      - staging
    paths:
      - 'packages/server/**'
      - 'platform/flowglad-next/**'
      - '.github/workflows/flowglad-server-integration-tests.yml'
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      NEXT_PUBLIC_STACK_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_STACK_PROJECT_ID }}
      NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: ${{ secrets.NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY }}
      STACK_SECRET_SERVER_KEY: ${{ secrets.STACK_SECRET_SERVER_KEY }}
      STRIPE_TEST_MODE_SECRET_KEY: ${{ secrets.STRIPE_TEST_MODE_SECRET_KEY }}
      TRIGGER_SECRET_KEY: ${{ secrets.TRIGGER_SECRET_KEY }}
      UNKEY_ROOT_KEY: ${{ secrets.UNKEY_ROOT_KEY }}
      UNKEY_API_ID: ${{ secrets.UNKEY_API_ID }}
      FLOWGLAD_API_KEY: ${{ secrets.FLOWGLAD_API_KEY }}
      FLOWGLAD_BASE_URL: http://localhost:3000
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build published packages
        run:  pnpm build && pnpm build:declarations
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set up Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1
      
      - name: Setup Docker for tests
        run: |
          cd platform/flowglad-next
          docker-compose -f docker-compose.test.yml down --volumes || true
          docker-compose -f docker-compose.test.yml up --build -d
          docker-compose -f docker-compose.test.yml ps
      
      - name: Install Flowglad Next packages
        run: |
          cd platform/flowglad-next
          pnpm install-packages
      
      - name: Run test setup
        run: |
          cd platform/flowglad-next
          pnpm test:setup

      - name: Install vercel cli
        run: |
          npm install -g vercel

      - name: Pull flowglad-next environment variables
        run: |
          cd platform/flowglad-next
          pnpm vercel:env-pull --environment=development --token=${{ secrets.VERCEL_TOKEN }}

      - name: Setup integration test server
        run: |
          cd platform/flowglad-next
          pnpm setup:integration-test-server

      - name: Log FLOWGLAD_SECRET_KEY
        run: |
          echo "FLOWGLAD_SECRET_KEY is set to: $FLOWGLAD_SECRET_KEY"

      - name: Start flowglad-next server
        run: |
          cd platform/flowglad-next
          pnpm dev &
          echo "Waiting for server to start..."
          sleep 30
          curl -s http://localhost:3000 > /dev/null || (echo "Server failed to start" && exit 1)
          echo "Server started successfully"
      
      # TODO: uncomment this when we have the test suite working
      # - name: Run FlowgladServer integration tests
      #   run: |
      #     cd packages/server
      #     pnpm test:integration
      
      - name: Run test teardown
        run: |
          cd platform/flowglad-next
          pnpm test:teardown 